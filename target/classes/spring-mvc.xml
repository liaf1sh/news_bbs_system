<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

	<!--<context:component-scan base-package="com.ld.controller" use-default-filters="false">
		      <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>-->
	<!-- 配置创建spring容器要扫描的包 -->
	<context:component-scan base-package="com.lindong.controller"></context:component-scan>
	<context:component-scan base-package="com.lindong.websocket"></context:component-scan>

	<!-- 配置视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/"></property>
		<property name="suffix" value=".html"></property>
	</bean>
	

	<!--拦截下来的请求进行分类，如果是服务器请求就就交给DispatcherServlet处理，如果不是就交给Web应用服务器处理-->
	<mvc:default-servlet-handler/>
	<!-- location表示路径，mapping表示文件，**表示该目录下的文件以及子目录的文件 -->
	<mvc:resources mapping="/WEB-INF/pages/**" location="/WEB-INF/pages/"></mvc:resources>
	<mvc:resources mapping="/WEB-INF/admin/**" location="/WEB-INF/admin/"></mvc:resources>
	<mvc:resources mapping="/statics/**" location="/statics/"></mvc:resources>

	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 能够上传文件的大小-->
		<property name="maxUploadSize" value="10485760"></property>
		<!-- 上传文件的编码 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 上传文件的最大缓存 -->
		<property name="maxInMemorySize" value="40960"></property>
	</bean>
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.ResourceHttpMessageConverter" >
			</bean>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!--配置fastJSON解析,加上@ResponseBody后直接放回json数据,不需要用JSON.toJSONString()转换-->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
						<value>application/xml;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


	<!--开启注解-->
	<mvc:annotation-driven/>

	<!--启用shiro注解 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<!-- 开启shiro注解支持 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- shiro全局异常处理 -->
	<!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/403.html</prop>
			</props>
		</property>
	</bean>-->
	<!-- 控制器异常处理 -->
	<!--<bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
	</bean>-->
	<!--全局异常处理器-->
	<bean class="com.lindong.exception.GlobalExceptionResolver"/>
	<aop:aspectj-autoproxy expose-proxy="true"></aop:aspectj-autoproxy>
</beans>