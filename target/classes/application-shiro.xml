<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
	
	<import resource="applicationContext-cache.xml"></import>
	<!--<bean id="myAuthFilter" class="com.lindong.utils.shiro.MyAuthFilter"></bean>-->
	<!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 调用我们配置的权限管理器 -->
		<property name="securityManager" ref="securityManager" />
		
		<!-- 配置我们的登录请求地址 -->
		<property name="loginUrl" value="/stair/admin/login" />
		<!-- 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 -->
		<property name="unauthorizedUrl" value="/unauthorized" />
		<!-- 退出 -->
		<property name="filters">
			<util:map>
				<entry key="logout" value-ref="logoutFilter" />
				<!--<entry key="myauth" value-ref="myAuthFilter" />-->
			</util:map>
		</property>
		<!-- 权限配置 -->
        <property name="filterChainDefinitionMap" ref="filterChainDefinitionMap"></property>
		<!--<property name="filterChainDefinitions">
			<value>
				&lt;!&ndash; anon表示此地址不需要任何权限即可访问 &ndash;&gt;
				/index=anon
				/404=anon
				/skipPage/**=anon
				/verifyCode=anon
				/loginAction=anon
				/stair/admin/login=anon
				/statics/**=anon
				/doLogout=logout
				&lt;!&ndash;所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login &ndash;&gt;
				/** = authc
			</value>
		</property>-->
	</bean>

    <bean id="filterChainDefinitionMap"
          factory-bean="filterChainDefinitionMapBuilder" factory-method="builderFilterChainDefinitionMap"></bean>
    <!--配置一个bean,该bean实际是一个map,通过实例工厂的方法-->
    <bean id="filterChainDefinitionMapBuilder" class="com.lindong.utils.shiro.FilterChainDefinitionMapBuilder"></bean>

	<!-- 退出过滤器 -->
	<!--<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/stair/admin/login" />
	</bean>-->
    <!--自定义登出过滤器-->
	<bean id="logoutFilter" class="com.lindong.utils.shiro.ShiroLogoutFilter">
		<property name="redirectUrl" value="/stair/admin/login_1" />
	</bean>

	<!-- 会话DAO，sessionManager里面的session需要保存在会话Dao里，没有会话Dao，session是瞬时的，没法从 sessionManager里面拿到session -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<!-- 用于生成会话ID，默认就是JavaUuidSessionIdGenerator，使用java.util.UUID生成 -->
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
	</bean>
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"></bean>
	
	<!-- 会话Cookie模板 sessionManager创建会话Cookie的模板 关闭浏览器立即失效 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!--<constructor-arg value="sid" />-->
		<constructor-arg name="name" value="shiro.sesssion" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>
	<!--<bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="shiro.sesssion"/>
		<property name="path" value="/"/>
	</bean>-->
	<!--<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="jeesite.session.id"/>
	</bean>-->
	
	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 全局会话超时时间（单位毫秒） -->
		<property name="globalSessionTimeout" value="1800000" />
		<property name="deleteInvalidSessions" value="true" />
        <property name="sessionValidationSchedulerEnabled" value="true" />
        <property name="sessionDAO" ref="sessionDAO" />
        <property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie"/>

        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
		<property name="cacheManager" ref="shiroEhcacheManager"/>
	</bean>
	
	<!-- 会话验证调度器，每30分钟执行一次验证 ，设定会话超时及保存 -->
	<bean name="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="interval" value="1800000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="databaseRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroEhcacheManager"/>
	</bean>

	<!-- 配置 CacheManager -->
	<!-- shiro整合echcache的缓存配置 -->
	<!-- 配置Shiro的平台缓存管理 -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- 注入ehcache的对象 -->
		<property name="cacheManager" ref="ehCacheManager"/>
	</bean>
	
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	
	<!-- 启用shrio授权注解拦截方式 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!-- 密码匹配器(暂时不用)
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5"/>
		<property name="hashIterations" value="2"/>
		<property name="hashSalted" value="1"/>
		<property name="storedCredentialsHexEncoded" value="true"/>
	</bean>
	-->
	
	<!-- 项目自定义的Realm，需自己编写该类 -->
	<bean id="databaseRealm" class="com.lindong.utils.shiro.DatabaseRealm">
		<property name="cacheManager" ref="shiroEhcacheManager"></property>
	<!-- <property name="credentialsMatcher" ref="credentialsMatcher"/>-->
	</bean>
	<!-- 启用shrio授权注解拦截方式 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>
